@use "sass:math";
@import "variables";
@import "mixins";

.header {
  height: $notScrolled;
  transition: height $duration ease, padding $duration ease,
    border $duration ease;
  position: fixed;
  top: -1px;
  padding: 0;
  z-index: 20;

  img {
    border-radius: 50%;
  }

  .leftPfp {
    height: $scrolledHeight - 1.2em;
    width: $scrolledHeight - 1.2em;
  }

  a {
    font-weight: bold;
    color: $color !important;
    height: 100%;

    picture {
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
  }

  #notScrolled {
    height: $notScrolled;
    transition: top $duration ease;
    @include fixed(0, 50%, -50%, 0);

    .centerProfile {
      width: $notScrolled - $homeMargin;
      height: $notScrolled - $homeMargin;
    }

    #notScrolledLinks {
      margin-left: $homeMargin;
    }
  }

  :global .container {
    transition: transform $duration ease;
    transform: translateY(-$notScrolled);
  }

  #right {
    overflow: hidden;
    text-overflow: clip;
    transition: transform $duration ease;
    height: 100%;

    a {
      padding: 1em 2em;
      text-decoration: underline;
    }
  }

  #notScrolledLinks a,
  #right a {
    padding: 0.5em 1em;

    &:hover {
      background-color: rgba(255, 255, 255, 0.1);
    }
  }

  p {
    padding-left: $homeMargin;
    font-size: 1.4em;
    margin: 0;
    color: white;
    transition: padding $duration ease;
    font-weight: bold;
  }
}

.projectPost {
  composes: header;
  height: 0;
  padding: 0;
  overflow: hidden;
  text-overflow: clip;

  #notScrolled {
    display: none;
  }
}

.scrolled {
  composes: header;
  height: $scrolledHeight;
  &:after {
    content: "";
    position: absolute;
    bottom: 0px;
    left: 0;
    border-bottom: 2px solid transparentize($color: $color, $amount: 0.2);
    width: 100%;
    transition: width $duration ease $duration * 2;
  }
  // border-bottom: 2px solid transparentize($color: $color, $amount: 0.2);

  #notScrolled {
    top: -$notScrolled;
  }

  :global .container {
    transform: translateY(0);
  }
}

$burgerContainer: 10em;
$linkMargin: 0.4em;
$burgerSize: 2.1em;

.burger {
  position: fixed;
  top: 0;
  right: 0;
  transition: transform $duration ease;
  transform: translateX(120%);
  align-items: flex-end;
  flex-direction: column;
  width: $burgerContainer;
}

.burgerWrapper {
  width: $scrolledHeight;
  height: $scrolledHeight;
  position: absolute;
  transition: width $duration ease;
  // transition-delay: $duration;
  // border-bottom: 0px solid transparentize($color: $color, $amount: 0.2);
  right: 0;
  top: 0;
  cursor: pointer;
  z-index: 5;
  display: flex;
  justify-content: center;
  align-items: center;

  &:after {
    content: "";
    position: absolute;
    bottom: 1px;
    right: 0;
    border-bottom: 2px solid transparentize($color: $color, $amount: 0.2);
    width: 0;
    transition: width $duration ease $duration * 2;
  }
}

.burgerIcon {
  position: relative;
  background-color: transparent;
  width: $burgerSize;
  height: $burgerSize;

  & > div {
    position: absolute;
    height: 2px;
    right: 0.8em;
    width: 50%;
    display: block;
    background: white;

    &::after {
      background: #fff;
      bottom: 0;
      content: "";
      height: 100%;
      left: 0;
      position: absolute;
      right: 0;
      top: 0;
      transition: background 0.3s cubic-bezier(0.25, 0.74, 0.22, 0.99);
      width: 100%;
    }
  }
  .firstLine {
    top: 0.75em;
    left: 0.5em;
    transition: top 0.1s ease-in 0.25s, opacity 0.1s ease-in 0.14s,
      transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19),
      -webkit-transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  .secondLine {
    top: 50%;
    left: 0.5em;
    margin-top: -1px;
    transition: 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  .thirdLine {
    bottom: 0.75em;
    left: 0.5em;
    transition: bottom 0.1s ease-in 0.25s,
      transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19),
      -webkit-transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
}

$linkAmount: 3;

.burgerLinks {
  flex-direction: column;
  padding: 0.8em 2em;
  background: $bg2;
  justify-content: center;
  overflow: hidden;
  text-overflow: clip;
  height: calc(#{$scrolledHeight} - 4px);
  padding: $scrolledHeight 20px 0 20px;
  transition: height $duration ease $duration;
  position: absolute;
  top: 0;
  width: $burgerContainer;
  right: 0;
  // opacity: 0;

  & > div {
    flex-direction: column;
    opacity: 0;
    transition: opacity $duration ease;
  }

  a {
    height: math.div($scrolledHeight, $linkAmount);
    margin: $linkMargin 0;
    color: white;
  }
}
.clicked {
  align-items: center;

  .burgerWrapper {
    // right: math.div($burgerContainer, 2) - math.div($scrolledHeight, 2);
    width: 100%;
    background: $bg2;
    // border-bottom: 2px solid transparentize($color: $color, $amount: 0.2);
    transition: width $duration ease;

    &:after {
      width: 100%;
      transition: width $duration ease;
    }
  }

  &.scrolled {
    &:after {
      width: calc(100% - #{$burgerContainer});
      transition: width $duration ease;
    }
  }

  .burgerLinks {
    height: $scrolledHeight + math.div($scrolledHeight, 4) * $linkAmount +
      $linkMargin * 3 * $linkAmount + 1em;
    transition: height $duration ease $duration;

    & > div {
      opacity: 1;
      transition: opacity $duration ease $duration;
    }
  }

  .firstLine {
    opacity: 0;
    top: 1em;
    transition: top 0.1s ease-out, opacity 0.1s ease-out 0.1s;
  }

  .secondLine {
    transform: rotate(225deg);
    transition-delay: 0.12s;
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  .thirdLine {
    bottom: 1em;
    transform: rotate(135deg);
    transition: bottom 0.1s ease-out,
      transform 0.22s cubic-bezier(0.215, 0.61, 0.355, 1) 0.12s,
      -webkit-transform 0.22s cubic-bezier(0.215, 0.61, 0.355, 1) 0.12s;
  }
}

@media screen and (max-width: 30em) {
  #right {
    transform: translateX(120%);
  }

  .burger {
    transform: translate(0%);
  }
}
